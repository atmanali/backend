generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// todo: need to refactor the relation between users and appointment: use a junction table instead
model users {
  id                 Int                 @id @default(autoincrement())
  username           String              @unique
  password           String
  passwordAsString   String
  first_name         String
  additionnal_names  String?
  last_name          String
  birth_day          DateTime?
  address            String?
  role               String
  users_appointments users_appointment[]
  date_created       DateTime            @default(now())
  date_updated       DateTime?
  user_created       String?
  user_updated       String?
}

model appointment {
  id                 Int                 @id @default(autoincrement())
  topic              String
  type               String
  date               DateTime
  users_appointments users_appointment[]
  date_created       DateTime            @default(now())
  date_updated       DateTime?
  user_created       String?
  user_updated       String?
}

model users_appointment {
  id             Int         @id @default(autoincrement())
  users_id       Int
  users          users       @relation(fields: [users_id], references: [id])
  appointment_id Int
  appointments   appointment @relation(fields: [appointment_id], references: [id])
}

model files {
  id           Int       @id @default(autoincrement())
  name         String
  mime_type    String
  file_size    Int
  blob         String
  description  String
  status       String
  modified_on  DateTime?
  modified_by  String?
  date_created DateTime  @default(now())
  date_updated DateTime?
  user_created String?
  user_updated String?
}
